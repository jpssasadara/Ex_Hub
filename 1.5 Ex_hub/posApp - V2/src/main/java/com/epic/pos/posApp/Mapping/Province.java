package com.epic.pos.posApp.Mapping;
// Generated Jul 30, 2019 11:58:51 AM by Hibernate Tools 4.3.1


import javax.persistence.*;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;

/**
 * Province generated by hbm2java
 */
@Entity
@Table(name="province"
)
public class Province  implements java.io.Serializable {


     private String provincecode;
     private Country country;
     private Status status;
     private String description;
     private String lastupdateduser;
     private Date lastupdatedtime;
     private Date createdtime;
     private Set<District> districts = new HashSet<District>(0);
     private Set<Merchantcustomer> merchantcustomers = new HashSet<Merchantcustomer>(0);
     private Set<Merchant> merchants = new HashSet<Merchant>(0);

    public Province() {
    }

	
    public Province(String provincecode, Country country, Status status, String description, Date lastupdatedtime, Date createdtime) {
        this.provincecode = provincecode;
        this.country = country;
        this.status = status;
        this.description = description;
        this.lastupdatedtime = lastupdatedtime;
        this.createdtime = createdtime;
    }
    public Province(String provincecode, Country country, Status status, String description, String lastupdateduser, Date lastupdatedtime, Date createdtime, Set<District> districts, Set<Merchantcustomer> merchantcustomers, Set<Merchant> merchants) {
       this.provincecode = provincecode;
       this.country = country;
       this.status = status;
       this.description = description;
       this.lastupdateduser = lastupdateduser;
       this.lastupdatedtime = lastupdatedtime;
       this.createdtime = createdtime;
       this.districts = districts;
       this.merchantcustomers = merchantcustomers;
       this.merchants = merchants;
    }
   
     @Id

    
    @Column(name="PROVINCECODE", unique=true, nullable=false, length=16)
    public String getProvincecode() {
        return this.provincecode;
    }
    
    public void setProvincecode(String provincecode) {
        this.provincecode = provincecode;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="COUNTRY", nullable=false)
    public Country getCountry() {
        return this.country;
    }
    
    public void setCountry(Country country) {
        this.country = country;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="STATUS", nullable=false)
    public Status getStatus() {
        return this.status;
    }
    
    public void setStatus(Status status) {
        this.status = status;
    }

    
    @Column(name="DESCRIPTION", nullable=false, length=64)
    public String getDescription() {
        return this.description;
    }
    
    public void setDescription(String description) {
        this.description = description;
    }

    
    @Column(name="LASTUPDATEDUSER", length=64)
    public String getLastupdateduser() {
        return this.lastupdateduser;
    }
    
    public void setLastupdateduser(String lastupdateduser) {
        this.lastupdateduser = lastupdateduser;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="LASTUPDATEDTIME", nullable=false, length=19)
    public Date getLastupdatedtime() {
        return this.lastupdatedtime;
    }
    
    public void setLastupdatedtime(Date lastupdatedtime) {
        this.lastupdatedtime = lastupdatedtime;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="CREATEDTIME", nullable=false, length=19)
    public Date getCreatedtime() {
        return this.createdtime;
    }
    
    public void setCreatedtime(Date createdtime) {
        this.createdtime = createdtime;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="province")
    public Set<District> getDistricts() {
        return this.districts;
    }
    
    public void setDistricts(Set<District> districts) {
        this.districts = districts;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="province")
    public Set<Merchantcustomer> getMerchantcustomers() {
        return this.merchantcustomers;
    }
    
    public void setMerchantcustomers(Set<Merchantcustomer> merchantcustomers) {
        this.merchantcustomers = merchantcustomers;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="province")
    public Set<Merchant> getMerchants() {
        return this.merchants;
    }
    
    public void setMerchants(Set<Merchant> merchants) {
        this.merchants = merchants;
    }




}


