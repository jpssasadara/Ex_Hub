package com.epic.pos.posApp.Mapping;
// Generated Jul 30, 2019 11:58:51 AM by Hibernate Tools 4.3.1


import javax.persistence.*;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;

/**
 * City generated by hbm2java
 */
@Entity
@Table(name="city"
)
public class City  implements java.io.Serializable {


     private String citycode;
     private District district;
     private Status status;
     private String description;
     private String lastupdateduser;
     private Date lastupdatedtime;
     private Date createdtime;
     private Set<Device> devices = new HashSet<Device>(0);
     private Set<Merchant> merchants = new HashSet<Merchant>(0);
     private Set<Merchantcustomer> merchantcustomers = new HashSet<Merchantcustomer>(0);
     private Set<Institute> institutes = new HashSet<Institute>(0);

    public City() {
    }

	
    public City(String citycode, District district, Status status, String description, Date lastupdatedtime, Date createdtime) {
        this.citycode = citycode;
        this.district = district;
        this.status = status;
        this.description = description;
        this.lastupdatedtime = lastupdatedtime;
        this.createdtime = createdtime;
    }
    public City(String citycode, District district, Status status, String description, String lastupdateduser, Date lastupdatedtime, Date createdtime, Set<Device> devices, Set<Merchant> merchants, Set<Merchantcustomer> merchantcustomers, Set<Institute> institutes) {
       this.citycode = citycode;
       this.district = district;
       this.status = status;
       this.description = description;
       this.lastupdateduser = lastupdateduser;
       this.lastupdatedtime = lastupdatedtime;
       this.createdtime = createdtime;
       this.devices = devices;
       this.merchants = merchants;
       this.merchantcustomers = merchantcustomers;
       this.institutes = institutes;
    }
   
     @Id

    
    @Column(name="CITYCODE", unique=true, nullable=false, length=16)
    public String getCitycode() {
        return this.citycode;
    }
    
    public void setCitycode(String citycode) {
        this.citycode = citycode;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="DISTRICT", nullable=false)
    public District getDistrict() {
        return this.district;
    }
    
    public void setDistrict(District district) {
        this.district = district;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="STATUS", nullable=false)
    public Status getStatus() {
        return this.status;
    }
    
    public void setStatus(Status status) {
        this.status = status;
    }

    
    @Column(name="DESCRIPTION", nullable=false, length=64)
    public String getDescription() {
        return this.description;
    }
    
    public void setDescription(String description) {
        this.description = description;
    }

    
    @Column(name="LASTUPDATEDUSER", length=64)
    public String getLastupdateduser() {
        return this.lastupdateduser;
    }
    
    public void setLastupdateduser(String lastupdateduser) {
        this.lastupdateduser = lastupdateduser;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="LASTUPDATEDTIME", nullable=false, length=19)
    public Date getLastupdatedtime() {
        return this.lastupdatedtime;
    }
    
    public void setLastupdatedtime(Date lastupdatedtime) {
        this.lastupdatedtime = lastupdatedtime;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="CREATEDTIME", nullable=false, length=19)
    public Date getCreatedtime() {
        return this.createdtime;
    }
    
    public void setCreatedtime(Date createdtime) {
        this.createdtime = createdtime;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="city")
    public Set<Device> getDevices() {
        return this.devices;
    }
    
    public void setDevices(Set<Device> devices) {
        this.devices = devices;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="city")
    public Set<Merchant> getMerchants() {
        return this.merchants;
    }
    
    public void setMerchants(Set<Merchant> merchants) {
        this.merchants = merchants;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="city")
    public Set<Merchantcustomer> getMerchantcustomers() {
        return this.merchantcustomers;
    }
    
    public void setMerchantcustomers(Set<Merchantcustomer> merchantcustomers) {
        this.merchantcustomers = merchantcustomers;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="city")
    public Set<Institute> getInstitutes() {
        return this.institutes;
    }
    
    public void setInstitutes(Set<Institute> institutes) {
        this.institutes = institutes;
    }




}


