package com.epic.pos.posApp.Mapping;
// Generated Jul 30, 2019 11:58:51 AM by Hibernate Tools 4.3.1

import javax.persistence.*;
import java.util.HashSet;
import java.util.Set;

/**
 * Status generated by hbm2java
 */
@Entity
@Table(name = "status"
)
public class Status implements java.io.Serializable {

    private String statuscode;
    private Statuscategory statuscategory;
    private String description;
    private Set<Mcc> mccs = new HashSet<Mcc>(0);
    private Set<Pageinstitute> pageinstitutes = new HashSet<Pageinstitute>(0);
    private Set<Institute> institutes = new HashSet<Institute>(0);
    private Set<Province> provinces = new HashSet<Province>(0);
    private Set<Device> devicesForStatus = new HashSet<Device>(0);
    private Set<Device> devicesForRplstatus = new HashSet<Device>(0);
    private Set<Users> usersesForPasswordstatus = new HashSet<Users>(0);
    private Set<District> districts = new HashSet<District>(0);
    private Set<Terminal> terminals = new HashSet<Terminal>(0);
    private Set<City> cities = new HashSet<City>(0);
    private Set<Userrole> userroles = new HashSet<Userrole>(0);
    private Set<Devicecategory> devicecategories = new HashSet<Devicecategory>(0);
    private Set<Pageinstance> pageinstances = new HashSet<Pageinstance>(0);
    private Set<Users> usersesForStatus = new HashSet<Users>(0);
    private Set<Instance> instances = new HashSet<Instance>(0);
    private Set<Applicationversion> applicationversions = new HashSet<Applicationversion>(0);
    private Set<Devicemodel> devicemodels = new HashSet<Devicemodel>(0);
    private Set<Passwordpolicy> passwordpolicies = new HashSet<Passwordpolicy>(0);
    private Set<Application> applications = new HashSet<Application>(0);
    private Set<Merchantcustomer> merchantcustomers = new HashSet<Merchantcustomer>(0);
    private Set<Devicebrand> devicebrands = new HashSet<Devicebrand>(0);
    private Set<Page> pages = new HashSet<Page>(0);
    private Set<Country> countries = new HashSet<Country>(0);
    private Set<Currency> currencies = new HashSet<Currency>(0);
    private Set<Merchant> merchants = new HashSet<Merchant>(0);
    private Set<Tmpauthrec> tmpauthrecs = new HashSet<Tmpauthrec>(0);
    private Set<Colors> colorses = new HashSet<Colors>(0);

    public Status() {
    }

    public Status(String statuscode) {
        this.statuscode = statuscode;
    }

    public Status(String statuscode, Statuscategory statuscategory, String description, Set<Mcc> mccs, Set<Pageinstitute> pageinstitutes, Set<Institute> institutes, Set<Province> provinces, Set<Device> devicesForStatus, Set<Device> devicesForRplstatus, Set<Users> usersesForPasswordstatus, Set<District> districts, Set<Terminal> terminals, Set<City> cities, Set<Userrole> userroles, Set<Devicecategory> devicecategories, Set<Pageinstance> pageinstances, Set<Users> usersesForStatus, Set<Instance> instances, Set<Applicationversion> applicationversions, Set<Devicemodel> devicemodels, Set<Passwordpolicy> passwordpolicies, Set<Application> applications, Set<Merchantcustomer> merchantcustomers, Set<Devicebrand> devicebrands, Set<Page> pages, Set<Country> countries, Set<Currency> currencies, Set<Merchant> merchants, Set<Tmpauthrec> tmpauthrecs, Set<Colors> colorses) {
        this.statuscode = statuscode;
        this.statuscategory = statuscategory;
        this.description = description;
        this.mccs = mccs;
        this.pageinstitutes = pageinstitutes;
        this.institutes = institutes;
        this.provinces = provinces;
        this.devicesForStatus = devicesForStatus;
        this.devicesForRplstatus = devicesForRplstatus;
        this.usersesForPasswordstatus = usersesForPasswordstatus;
        this.districts = districts;
        this.terminals = terminals;
        this.cities = cities;
        this.userroles = userroles;
        this.devicecategories = devicecategories;
        this.pageinstances = pageinstances;
        this.usersesForStatus = usersesForStatus;
        this.instances = instances;
        this.applicationversions = applicationversions;
        this.devicemodels = devicemodels;
        this.passwordpolicies = passwordpolicies;
        this.applications = applications;
        this.merchantcustomers = merchantcustomers;
        this.devicebrands = devicebrands;
        this.pages = pages;
        this.countries = countries;
        this.currencies = currencies;
        this.merchants = merchants;
        this.tmpauthrecs = tmpauthrecs;
        this.colorses = colorses;
    }

    @Id

    @Column(name = "STATUSCODE", unique = true, nullable = false, length = 16)
    public String getStatuscode() {
        return this.statuscode;
    }

    public void setStatuscode(String statuscode) {
        this.statuscode = statuscode;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "STATUSCATEGORYCODE")
    public Statuscategory getStatuscategory() {
        return this.statuscategory;
    }

    public void setStatuscategory(Statuscategory statuscategory) {
        this.statuscategory = statuscategory;
    }

    @Column(name = "DESCRIPTION", length = 128)
    public String getDescription() {
        return this.description;
    }

    public void setDescription(String description) {
        this.description = description;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "status")
    public Set<Mcc> getMccs() {
        return this.mccs;
    }

    public void setMccs(Set<Mcc> mccs) {
        this.mccs = mccs;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "status")
    public Set<Pageinstitute> getPageinstitutes() {
        return this.pageinstitutes;
    }

    public void setPageinstitutes(Set<Pageinstitute> pageinstitutes) {
        this.pageinstitutes = pageinstitutes;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "status")
    public Set<Institute> getInstitutes() {
        return this.institutes;
    }

    public void setInstitutes(Set<Institute> institutes) {
        this.institutes = institutes;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "status")
    public Set<Province> getProvinces() {
        return this.provinces;
    }

    public void setProvinces(Set<Province> provinces) {
        this.provinces = provinces;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "statusByStatus")
    public Set<Device> getDevicesForStatus() {
        return this.devicesForStatus;
    }

    public void setDevicesForStatus(Set<Device> devicesForStatus) {
        this.devicesForStatus = devicesForStatus;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "statusByRplstatus")
    public Set<Device> getDevicesForRplstatus() {
        return this.devicesForRplstatus;
    }

    public void setDevicesForRplstatus(Set<Device> devicesForRplstatus) {
        this.devicesForRplstatus = devicesForRplstatus;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "statusByPasswordstatus")
    public Set<Users> getUsersesForPasswordstatus() {
        return this.usersesForPasswordstatus;
    }

    public void setUsersesForPasswordstatus(Set<Users> usersesForPasswordstatus) {
        this.usersesForPasswordstatus = usersesForPasswordstatus;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "status")
    public Set<District> getDistricts() {
        return this.districts;
    }

    public void setDistricts(Set<District> districts) {
        this.districts = districts;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "status")
    public Set<Terminal> getTerminals() {
        return this.terminals;
    }

    public void setTerminals(Set<Terminal> terminals) {
        this.terminals = terminals;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "status")
    public Set<City> getCities() {
        return this.cities;
    }

    public void setCities(Set<City> cities) {
        this.cities = cities;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "status")
    public Set<Userrole> getUserroles() {
        return this.userroles;
    }

    public void setUserroles(Set<Userrole> userroles) {
        this.userroles = userroles;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "status")
    public Set<Devicecategory> getDevicecategories() {
        return this.devicecategories;
    }

    public void setDevicecategories(Set<Devicecategory> devicecategories) {
        this.devicecategories = devicecategories;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "status")
    public Set<Pageinstance> getPageinstances() {
        return this.pageinstances;
    }

    public void setPageinstances(Set<Pageinstance> pageinstances) {
        this.pageinstances = pageinstances;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "statusByStatus")
    public Set<Users> getUsersesForStatus() {
        return this.usersesForStatus;
    }

    public void setUsersesForStatus(Set<Users> usersesForStatus) {
        this.usersesForStatus = usersesForStatus;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "status")
    public Set<Instance> getInstances() {
        return this.instances;
    }

    public void setInstances(Set<Instance> instances) {
        this.instances = instances;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "status")
    public Set<Applicationversion> getApplicationversions() {
        return this.applicationversions;
    }

    public void setApplicationversions(Set<Applicationversion> applicationversions) {
        this.applicationversions = applicationversions;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "status")
    public Set<Devicemodel> getDevicemodels() {
        return this.devicemodels;
    }

    public void setDevicemodels(Set<Devicemodel> devicemodels) {
        this.devicemodels = devicemodels;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "status")
    public Set<Passwordpolicy> getPasswordpolicies() {
        return this.passwordpolicies;
    }

    public void setPasswordpolicies(Set<Passwordpolicy> passwordpolicies) {
        this.passwordpolicies = passwordpolicies;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "status")
    public Set<Application> getApplications() {
        return this.applications;
    }

    public void setApplications(Set<Application> applications) {
        this.applications = applications;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "status")
    public Set<Merchantcustomer> getMerchantcustomers() {
        return this.merchantcustomers;
    }

    public void setMerchantcustomers(Set<Merchantcustomer> merchantcustomers) {
        this.merchantcustomers = merchantcustomers;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "status")
    public Set<Devicebrand> getDevicebrands() {
        return this.devicebrands;
    }

    public void setDevicebrands(Set<Devicebrand> devicebrands) {
        this.devicebrands = devicebrands;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "status")
    public Set<Page> getPages() {
        return this.pages;
    }

    public void setPages(Set<Page> pages) {
        this.pages = pages;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "status")
    public Set<Country> getCountries() {
        return this.countries;
    }

    public void setCountries(Set<Country> countries) {
        this.countries = countries;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "status")
    public Set<Currency> getCurrencies() {
        return this.currencies;
    }

    public void setCurrencies(Set<Currency> currencies) {
        this.currencies = currencies;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "status")
    public Set<Merchant> getMerchants() {
        return this.merchants;
    }

    public void setMerchants(Set<Merchant> merchants) {
        this.merchants = merchants;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "status")
    public Set<Tmpauthrec> getTmpauthrecs() {
        return this.tmpauthrecs;
    }

    public void setTmpauthrecs(Set<Tmpauthrec> tmpauthrecs) {
        this.tmpauthrecs = tmpauthrecs;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "status")
    public Set<Colors> getColorses() {
        return this.colorses;
    }

    public void setColorses(Set<Colors> colorses) {
        this.colorses = colorses;
    }
}
