package com.epic.pos.posApp.Mapping;
// Generated Jul 30, 2019 11:58:51 AM by Hibernate Tools 4.3.1


import javax.persistence.*;
import java.util.Date;

/**
 * Pagetaskuserrole generated by hbm2java
 */
@Entity
@Table(name="pagetaskuserrole"
)
public class Pagetaskuserrole  implements java.io.Serializable {


     private PagetaskuserroleId id;
     private Page page;
     private Task task;
     private Userrole userrole;
     private String lastupdateduser;
     private Date lastupdatedtime;
     private Date createdtime;

    public Pagetaskuserrole() {
    }

	
    public Pagetaskuserrole(PagetaskuserroleId id, Page page, Task task, Userrole userrole, Date lastupdatedtime, Date createdtime) {
        this.id = id;
        this.page = page;
        this.task = task;
        this.userrole = userrole;
        this.lastupdatedtime = lastupdatedtime;
        this.createdtime = createdtime;
    }
    public Pagetaskuserrole(PagetaskuserroleId id, Page page, Task task, Userrole userrole, String lastupdateduser, Date lastupdatedtime, Date createdtime) {
       this.id = id;
       this.page = page;
       this.task = task;
       this.userrole = userrole;
       this.lastupdateduser = lastupdateduser;
       this.lastupdatedtime = lastupdatedtime;
       this.createdtime = createdtime;
    }
   
     @EmbeddedId

    
    @AttributeOverrides( {
        @AttributeOverride(name="page", column=@Column(name="PAGE", nullable=false, length=16) ),
        @AttributeOverride(name="task", column=@Column(name="TASK", nullable=false, length=16) ),
        @AttributeOverride(name="userrole", column=@Column(name="USERROLE", nullable=false) ) } )
    public PagetaskuserroleId getId() {
        return this.id;
    }
    
    public void setId(PagetaskuserroleId id) {
        this.id = id;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="PAGE", nullable=false, insertable=false, updatable=false)
    public Page getPage() {
        return this.page;
    }
    
    public void setPage(Page page) {
        this.page = page;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="TASK", nullable=false, insertable=false, updatable=false)
    public Task getTask() {
        return this.task;
    }
    
    public void setTask(Task task) {
        this.task = task;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="USERROLE", nullable=false, insertable=false, updatable=false)
    public Userrole getUserrole() {
        return this.userrole;
    }
    
    public void setUserrole(Userrole userrole) {
        this.userrole = userrole;
    }

    
    @Column(name="LASTUPDATEDUSER", length=64)
    public String getLastupdateduser() {
        return this.lastupdateduser;
    }
    
    public void setLastupdateduser(String lastupdateduser) {
        this.lastupdateduser = lastupdateduser;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="LASTUPDATEDTIME", nullable=false, length=19)
    public Date getLastupdatedtime() {
        return this.lastupdatedtime;
    }
    
    public void setLastupdatedtime(Date lastupdatedtime) {
        this.lastupdatedtime = lastupdatedtime;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="CREATEDTIME", nullable=false, length=19)
    public Date getCreatedtime() {
        return this.createdtime;
    }
    
    public void setCreatedtime(Date createdtime) {
        this.createdtime = createdtime;
    }




}


