package com.epic.pos.posApp.Mapping;
// Generated Jul 30, 2019 11:58:51 AM by Hibernate Tools 4.3.1


import javax.persistence.*;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import static javax.persistence.GenerationType.IDENTITY;

/**
 * Userrole generated by hbm2java
 */
@Entity
@Table(name="userrole"
)
public class Userrole  implements java.io.Serializable {


     private Integer id;
     private Instance instance;
     private Institute institute;
     private Status status;
     private Userroletype userroletype;
     private String userrolecode;
     private String description;
     private Date lastupdatedtime;
     private String lastupdateduser;
     private Date createdtime;
     private Set<Users> userses = new HashSet<Users>(0);
     private Set<Pageuserrole> pageuserroles = new HashSet<Pageuserrole>(0);
     private Set<Pagetaskuserrole> pagetaskuserroles = new HashSet<Pagetaskuserrole>(0);

    public Userrole() {
    }

	
    public Userrole(Instance instance, Userroletype userroletype, String userrolecode, Date lastupdatedtime, Date createdtime) {
        this.instance = instance;
        this.userroletype = userroletype;
        this.userrolecode = userrolecode;
        this.lastupdatedtime = lastupdatedtime;
        this.createdtime = createdtime;
    }
    public Userrole(Instance instance, Institute institute, Status status, Userroletype userroletype, String userrolecode, String description, Date lastupdatedtime, String lastupdateduser, Date createdtime, Set<Users> userses, Set<Pageuserrole> pageuserroles, Set<Pagetaskuserrole> pagetaskuserroles) {
       this.instance = instance;
       this.institute = institute;
       this.status = status;
       this.userroletype = userroletype;
       this.userrolecode = userrolecode;
       this.description = description;
       this.lastupdatedtime = lastupdatedtime;
       this.lastupdateduser = lastupdateduser;
       this.createdtime = createdtime;
       this.userses = userses;
       this.pageuserroles = pageuserroles;
       this.pagetaskuserroles = pagetaskuserroles;
    }
   
     @Id
     @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="ID", unique=true, nullable=false)
    public Integer getId() {
        return this.id;
    }
    
    public void setId(Integer id) {
        this.id = id;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="INSTANCE", nullable=false)
    public Instance getInstance() {
        return this.instance;
    }
    
    public void setInstance(Instance instance) {
        this.instance = instance;
    }

@ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="INSTITUTE")
    public Institute getInstitute() {
        return this.institute;
    }
    
    public void setInstitute(Institute institute) {
        this.institute = institute;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="STATUS")
    public Status getStatus() {
        return this.status;
    }
    
    public void setStatus(Status status) {
        this.status = status;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="USERROLETYPE", nullable=false)
    public Userroletype getUserroletype() {
        return this.userroletype;
    }
    
    public void setUserroletype(Userroletype userroletype) {
        this.userroletype = userroletype;
    }

    
    @Column(name="USERROLECODE", nullable=false, length=16)
    public String getUserrolecode() {
        return this.userrolecode;
    }
    
    public void setUserrolecode(String userrolecode) {
        this.userrolecode = userrolecode;
    }

    
    @Column(name="DESCRIPTION", length=64)
    public String getDescription() {
        return this.description;
    }
    
    public void setDescription(String description) {
        this.description = description;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="LASTUPDATEDTIME", nullable=false, length=19)
    public Date getLastupdatedtime() {
        return this.lastupdatedtime;
    }
    
    public void setLastupdatedtime(Date lastupdatedtime) {
        this.lastupdatedtime = lastupdatedtime;
    }

    
    @Column(name="LASTUPDATEDUSER", length=64)
    public String getLastupdateduser() {
        return this.lastupdateduser;
    }
    
    public void setLastupdateduser(String lastupdateduser) {
        this.lastupdateduser = lastupdateduser;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="CREATEDTIME", nullable=false, length=19)
    public Date getCreatedtime() {
        return this.createdtime;
    }
    
    public void setCreatedtime(Date createdtime) {
        this.createdtime = createdtime;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="userrole")
    public Set<Users> getUserses() {
        return this.userses;
    }
    
    public void setUserses(Set<Users> userses) {
        this.userses = userses;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="userrole")
    public Set<Pageuserrole> getPageuserroles() {
        return this.pageuserroles;
    }
    
    public void setPageuserroles(Set<Pageuserrole> pageuserroles) {
        this.pageuserroles = pageuserroles;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="userrole")
    public Set<Pagetaskuserrole> getPagetaskuserroles() {
        return this.pagetaskuserroles;
    }
    
    public void setPagetaskuserroles(Set<Pagetaskuserrole> pagetaskuserroles) {
        this.pagetaskuserroles = pagetaskuserroles;
    }




}


