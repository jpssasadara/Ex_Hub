package com.epic.pos.posApp.Mapping;
// Generated Jul 30, 2019 11:58:51 AM by Hibernate Tools 4.3.1


import javax.persistence.*;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import static javax.persistence.GenerationType.IDENTITY;

/**
 * Merchantcustomer generated by hbm2java
 */
@Entity
@Table(name="merchantcustomer"
)
public class Merchantcustomer  implements java.io.Serializable {


     private Long id;
     private City city;
     private Country country;
     private District district;
     private Institute institute;
     private Province province;
     private Status status;
     private byte[] mobilelogo;
     private byte[] weblogo;
     private String idno;
     private String idtype;
     private String legalname;
     private String contactno;
     private String contactperson;
     private String contactpersonposition;
     private String postalcode;
     private String address;
     private String fax;
     private String email;
     private String remark;
     private String lastupdateduser;
     private Date lastupdatedtime;
     private Date createdtime;
     private String emailEStatement;
     private String branch;
     private Set<Merchant> merchants = new HashSet<Merchant>(0);

    public Merchantcustomer() {
    }

	
    public Merchantcustomer(Institute institute, Status status, Date lastupdatedtime, Date createdtime) {
        this.institute = institute;
        this.status = status;
        this.lastupdatedtime = lastupdatedtime;
        this.createdtime = createdtime;
    }
    public Merchantcustomer(City city, Country country, District district, Institute institute, Province province, Status status, byte[] mobilelogo, byte[] weblogo, String idno, String idtype, String legalname, String contactno, String contactperson, String contactpersonposition, String postalcode, String address, String fax, String email, String remark, String lastupdateduser, Date lastupdatedtime, Date createdtime, String emailEStatement, String branch, Set<Merchant> merchants) {
       this.city = city;
       this.country = country;
       this.district = district;
       this.institute = institute;
       this.province = province;
       this.status = status;
       this.mobilelogo = mobilelogo;
       this.weblogo = weblogo;
       this.idno = idno;
       this.idtype = idtype;
       this.legalname = legalname;
       this.contactno = contactno;
       this.contactperson = contactperson;
       this.contactpersonposition = contactpersonposition;
       this.postalcode = postalcode;
       this.address = address;
       this.fax = fax;
       this.email = email;
       this.remark = remark;
       this.lastupdateduser = lastupdateduser;
       this.lastupdatedtime = lastupdatedtime;
       this.createdtime = createdtime;
       this.emailEStatement = emailEStatement;
       this.branch = branch;
       this.merchants = merchants;
    }
   
     @Id
     @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="ID", unique=true, nullable=false)
    public Long getId() {
        return this.id;
    }
    
    public void setId(Long id) {
        this.id = id;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="CITY")
    public City getCity() {
        return this.city;
    }
    
    public void setCity(City city) {
        this.city = city;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="COUNTRY")
    public Country getCountry() {
        return this.country;
    }
    
    public void setCountry(Country country) {
        this.country = country;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="DISTRICT")
    public District getDistrict() {
        return this.district;
    }
    
    public void setDistrict(District district) {
        this.district = district;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="INSTITUTE", nullable=false)
    public Institute getInstitute() {
        return this.institute;
    }
    
    public void setInstitute(Institute institute) {
        this.institute = institute;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="PROVINCE")
    public Province getProvince() {
        return this.province;
    }
    
    public void setProvince(Province province) {
        this.province = province;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="STATUS", nullable=false)
    public Status getStatus() {
        return this.status;
    }
    
    public void setStatus(Status status) {
        this.status = status;
    }

    
    @Column(name="MOBILELOGO")
    public byte[] getMobilelogo() {
        return this.mobilelogo;
    }
    
    public void setMobilelogo(byte[] mobilelogo) {
        this.mobilelogo = mobilelogo;
    }

    
    @Column(name="WEBLOGO")
    public byte[] getWeblogo() {
        return this.weblogo;
    }
    
    public void setWeblogo(byte[] weblogo) {
        this.weblogo = weblogo;
    }

    
    @Column(name="IDNO", length=128)
    public String getIdno() {
        return this.idno;
    }
    
    public void setIdno(String idno) {
        this.idno = idno;
    }

    
    @Column(name="IDTYPE", length=16)
    public String getIdtype() {
        return this.idtype;
    }
    
    public void setIdtype(String idtype) {
        this.idtype = idtype;
    }

    
    @Column(name="LEGALNAME", length=256)
    public String getLegalname() {
        return this.legalname;
    }
    
    public void setLegalname(String legalname) {
        this.legalname = legalname;
    }

    
    @Column(name="CONTACTNO", length=64)
    public String getContactno() {
        return this.contactno;
    }
    
    public void setContactno(String contactno) {
        this.contactno = contactno;
    }

    
    @Column(name="CONTACTPERSON", length=256)
    public String getContactperson() {
        return this.contactperson;
    }
    
    public void setContactperson(String contactperson) {
        this.contactperson = contactperson;
    }

    
    @Column(name="CONTACTPERSONPOSITION", length=256)
    public String getContactpersonposition() {
        return this.contactpersonposition;
    }
    
    public void setContactpersonposition(String contactpersonposition) {
        this.contactpersonposition = contactpersonposition;
    }

    
    @Column(name="POSTALCODE", length=16)
    public String getPostalcode() {
        return this.postalcode;
    }
    
    public void setPostalcode(String postalcode) {
        this.postalcode = postalcode;
    }

    
    @Column(name="ADDRESS", length=512)
    public String getAddress() {
        return this.address;
    }
    
    public void setAddress(String address) {
        this.address = address;
    }

    
    @Column(name="FAX", length=64)
    public String getFax() {
        return this.fax;
    }
    
    public void setFax(String fax) {
        this.fax = fax;
    }

    
    @Column(name="EMAIL", length=256)
    public String getEmail() {
        return this.email;
    }
    
    public void setEmail(String email) {
        this.email = email;
    }

    
    @Column(name="REMARK", length=64)
    public String getRemark() {
        return this.remark;
    }
    
    public void setRemark(String remark) {
        this.remark = remark;
    }

    
    @Column(name="LASTUPDATEDUSER", length=64)
    public String getLastupdateduser() {
        return this.lastupdateduser;
    }
    
    public void setLastupdateduser(String lastupdateduser) {
        this.lastupdateduser = lastupdateduser;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="LASTUPDATEDTIME", nullable=false, length=19)
    public Date getLastupdatedtime() {
        return this.lastupdatedtime;
    }
    
    public void setLastupdatedtime(Date lastupdatedtime) {
        this.lastupdatedtime = lastupdatedtime;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="CREATEDTIME", nullable=false, length=19)
    public Date getCreatedtime() {
        return this.createdtime;
    }
    
    public void setCreatedtime(Date createdtime) {
        this.createdtime = createdtime;
    }

    
    @Column(name="EMAIL_E_STATEMENT", length=256)
    public String getEmailEStatement() {
        return this.emailEStatement;
    }
    
    public void setEmailEStatement(String emailEStatement) {
        this.emailEStatement = emailEStatement;
    }

    
    @Column(name="BRANCH", length=16)
    public String getBranch() {
        return this.branch;
    }
    
    public void setBranch(String branch) {
        this.branch = branch;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="merchantcustomer")
    public Set<Merchant> getMerchants() {
        return this.merchants;
    }
    
    public void setMerchants(Set<Merchant> merchants) {
        this.merchants = merchants;
    }




}


