package com.epic.pos.posApp.Mapping;
// Generated Jul 30, 2019 11:58:51 AM by Hibernate Tools 4.3.1


import javax.persistence.*;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import static javax.persistence.GenerationType.IDENTITY;

/**
 * Institute generated by hbm2java
 */
@Entity
@Table(name="institute"
)
public class Institute  implements java.io.Serializable {


     private Integer id;
     private Bank bank;
     private City city;
     private Instance instance;
     private Status status;
     private String institutecode;
     private String description;
     private byte[] weblogo;
     private Date lastupdatedtime;
     private String lastupdateduser;
     private Date createdtime;
     private Set<Devicebrand> devicebrands = new HashSet<Devicebrand>(0);
     private Set<Mcc> mccs = new HashSet<Mcc>(0);
     private Set<Application> applications = new HashSet<Application>(0);
     private Set<Device> devices = new HashSet<Device>(0);
     private Set<Devicecategory> devicecategories = new HashSet<Devicecategory>(0);
     private Set<Merchantcustomer> merchantcustomers = new HashSet<Merchantcustomer>(0);
     private Set<Merchant> merchants = new HashSet<Merchant>(0);

    public Institute() {
    }

	
    public Institute(Bank bank, City city, Instance instance, Status status, String institutecode, Date lastupdatedtime, Date createdtime) {
        this.bank = bank;
        this.city = city;
        this.instance = instance;
        this.status = status;
        this.institutecode = institutecode;
        this.lastupdatedtime = lastupdatedtime;
        this.createdtime = createdtime;
    }
    public Institute(Bank bank, City city, Instance instance, Status status, String institutecode, String description, byte[] weblogo, Date lastupdatedtime, String lastupdateduser, Date createdtime, Set<Devicebrand> devicebrands, Set<Mcc> mccs, Set<Application> applications, Set<Device> devices, Set<Devicecategory> devicecategories, Set<Merchantcustomer> merchantcustomers, Set<Merchant> merchants) {
       this.bank = bank;
       this.city = city;
       this.instance = instance;
       this.status = status;
       this.institutecode = institutecode;
       this.description = description;
       this.weblogo = weblogo;
       this.lastupdatedtime = lastupdatedtime;
       this.lastupdateduser = lastupdateduser;
       this.createdtime = createdtime;
       this.devicebrands = devicebrands;
       this.mccs = mccs;
       this.applications = applications;
       this.devices = devices;
       this.devicecategories = devicecategories;
       this.merchantcustomers = merchantcustomers;
       this.merchants = merchants;
    }
   
     @Id
     @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="ID", unique=true, nullable=false)
    public Integer getId() {
        return this.id;
    }
    
    public void setId(Integer id) {
        this.id = id;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="BANK", nullable=false)
    public Bank getBank() {
        return this.bank;
    }
    
    public void setBank(Bank bank) {
        this.bank = bank;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="CITY", nullable=false)
    public City getCity() {
        return this.city;
    }
    
    public void setCity(City city) {
        this.city = city;
    }

@ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="INSTANCE", nullable=false)
    public Instance getInstance() {
        return this.instance;
    }
    
    public void setInstance(Instance instance) {
        this.instance = instance;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="STATUS", nullable=false)
    public Status getStatus() {
        return this.status;
    }
    
    public void setStatus(Status status) {
        this.status = status;
    }

    
    @Column(name="INSTITUTECODE", nullable=false, length=16)
    public String getInstitutecode() {
        return this.institutecode;
    }
    
    public void setInstitutecode(String institutecode) {
        this.institutecode = institutecode;
    }

    
    @Column(name="DESCRIPTION", length=64)
    public String getDescription() {
        return this.description;
    }
    
    public void setDescription(String description) {
        this.description = description;
    }

    
    @Column(name="WEBLOGO")
    public byte[] getWeblogo() {
        return this.weblogo;
    }
    
    public void setWeblogo(byte[] weblogo) {
        this.weblogo = weblogo;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="LASTUPDATEDTIME", nullable=false, length=19)
    public Date getLastupdatedtime() {
        return this.lastupdatedtime;
    }
    
    public void setLastupdatedtime(Date lastupdatedtime) {
        this.lastupdatedtime = lastupdatedtime;
    }

    
    @Column(name="LASTUPDATEDUSER", length=64)
    public String getLastupdateduser() {
        return this.lastupdateduser;
    }
    
    public void setLastupdateduser(String lastupdateduser) {
        this.lastupdateduser = lastupdateduser;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="CREATEDTIME", nullable=false, length=19)
    public Date getCreatedtime() {
        return this.createdtime;
    }
    
    public void setCreatedtime(Date createdtime) {
        this.createdtime = createdtime;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="institute")
    public Set<Devicebrand> getDevicebrands() {
        return this.devicebrands;
    }
    
    public void setDevicebrands(Set<Devicebrand> devicebrands) {
        this.devicebrands = devicebrands;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="institute")
    public Set<Mcc> getMccs() {
        return this.mccs;
    }
    
    public void setMccs(Set<Mcc> mccs) {
        this.mccs = mccs;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="institute")
    public Set<Application> getApplications() {
        return this.applications;
    }
    
    public void setApplications(Set<Application> applications) {
        this.applications = applications;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="institute")
    public Set<Device> getDevices() {
        return this.devices;
    }
    
    public void setDevices(Set<Device> devices) {
        this.devices = devices;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="institute")
    public Set<Devicecategory> getDevicecategories() {
        return this.devicecategories;
    }
    
    public void setDevicecategories(Set<Devicecategory> devicecategories) {
        this.devicecategories = devicecategories;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="institute")
    public Set<Merchantcustomer> getMerchantcustomers() {
        return this.merchantcustomers;
    }
    
    public void setMerchantcustomers(Set<Merchantcustomer> merchantcustomers) {
        this.merchantcustomers = merchantcustomers;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="institute")
    public Set<Merchant> getMerchants() {
        return this.merchants;
    }
    
    public void setMerchants(Set<Merchant> merchants) {
        this.merchants = merchants;
    }




}


